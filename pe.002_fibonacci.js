// Project Euler: Problem 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

//Create a function that will provide the final solution
function solution(){

//inside the function, declar a var array 
	var fiboNum = [1, 2], sum=0;

//create a method that will run a calculation that will identify Fibonacci numbers
	function cal(arr ) {
		return arr[ arr.length -1] + arr[arr.length -2]
	}

//create a loop that will run through each of the numbers, define how long to run the loop (i.e., 4million)
while (fiboNum[fiboNUm.length-1] < 4e+6) {
	fibNum.push(cal(fibNum));
}

//Now, for each of the fibonacci numbers identified, run a mod calculation to identify even numbers ...
fibNum.forEach(function(n){
	if (n%2 === 0)
	{

//...and add them
		sum += n;
	}
});

//returning the total sum
return sum:
}

//and printing it out here!
console.log(solution());